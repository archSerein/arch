/*
 * Generated by Bluespec Compiler, version 2024.01-19-g4cbd4f58 (build 4cbd4f58)
 * 
 * On Fri Jun 21 06:47:16 UTC 2024
 * 
 */
#include "bluesim_primitives.h"
#include "mkTbCSASimple.h"


/* String declarations */
static std::string const __str_literal_2("%d + %d = %d", 12u);
static std::string const __str_literal_3("FAILED %d + %d gave %d instead of %d", 36u);
static std::string const __str_literal_1("PASSED", 6u);


/* Constructor */
MOD_mkTbCSASimple::MOD_mkTbCSASimple(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_cycle(simHdl, "cycle", this, 32u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  symbol_count = 2u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTbCSASimple::init_symbols_0()
{
  init_symbol(&symbols[0u], "cycle", SYM_MODULE, &INST_cycle);
  init_symbol(&symbols[1u], "RL_test", SYM_RULE);
}


/* Rule actions */

void MOD_mkTbCSASimple::RL_test()
{
  tUInt8 DEF_high__h193;
  tUInt32 DEF_x__h3284;
  tUInt8 DEF_y__h1149;
  tUInt8 DEF_y__h2352;
  tUInt8 DEF_b__h328;
  tUInt8 DEF_y__h1213;
  tUInt8 DEF_x__h1212;
  tUInt8 DEF_y__h1211;
  tUInt8 DEF_x__h1210;
  tUInt8 DEF_y__h1151;
  tUInt8 DEF_x__h1150;
  tUInt8 DEF_x__h1148;
  tUInt8 DEF_y__h427;
  tUInt8 DEF_x__h426;
  tUInt8 DEF_y__h425;
  tUInt8 DEF_x__h424;
  tUInt8 DEF_y__h1866;
  tUInt8 DEF_y__h2518;
  tUInt8 DEF_x__h1865;
  tUInt8 DEF_y__h1864;
  tUInt8 DEF_x__h1863;
  tUInt8 DEF_y__h1804;
  tUInt8 DEF_y__h2456;
  tUInt8 DEF_x__h1803;
  tUInt8 DEF_y__h1802;
  tUInt8 DEF_x__h1801;
  tUInt8 DEF_y__h1702;
  tUInt8 DEF_y__h2354;
  tUInt8 DEF_x__h1701;
  tUInt8 DEF_x__h2351;
  tUInt8 DEF_y__h1700;
  tUInt8 DEF_x__h1699;
  tUInt8 DEF_a__h327;
  tUInt8 DEF_x__h2577;
  tUInt8 DEF_y__h2516;
  tUInt8 DEF_x__h2515;
  tUInt8 DEF_y__h2454;
  tUInt8 DEF_x__h2453;
  tUInt8 DEF_b__h330;
  tUInt8 DEF_a__h329;
  tUInt8 DEF_b__h2914;
  tUInt8 DEF_a__h2913;
  tUInt8 DEF_b__h2960;
  tUInt8 DEF_a__h2959;
  tUInt8 DEF_b__h3006;
  tUInt8 DEF_a__h3005;
  tUInt8 DEF_b__h3052;
  tUInt8 DEF_a__h3051;
  tUInt8 DEF_c__h1688;
  tUInt8 DEF_a__h2911;
  tUInt8 DEF_c__h2340;
  tUInt8 DEF_x__h2045;
  tUInt8 DEF_b__h2912;
  tUInt8 DEF_c__h1790;
  tUInt8 DEF_a__h2957;
  tUInt8 DEF_c__h2442;
  tUInt8 DEF_x__h2101;
  tUInt8 DEF_b__h2958;
  tUInt8 DEF_c__h1852;
  tUInt8 DEF_a__h3003;
  tUInt8 DEF_c__h2504;
  tUInt8 DEF_x__h2157;
  tUInt8 DEF_b__h3004;
  tUInt8 DEF_c__h1381;
  tUInt8 DEF_x__h1392;
  tUInt8 DEF_c__h1137;
  tUInt8 DEF_x__h1448;
  tUInt8 DEF_c__h1199;
  tUInt8 DEF_x__h1504;
  tUInt8 DEF_a__h3049;
  tUInt8 DEF_b__h3050;
  tUInt8 DEF_sel__h196;
  tUInt8 DEF_a__h331;
  tUInt8 DEF_NOT_cycle_EQ_8_AND_INV_SEL_ARR_1_8_63_102_177__ETC___d112;
  tUInt8 DEF_NOT_cycle_EQ_8___d3;
  tUInt8 DEF_NOT_cycle_EQ_8_AND_NOT_INV_SEL_ARR_1_8_63_102__ETC___d114;
  tUInt32 DEF_realAns__h3121;
  tUInt32 DEF_v__h186;
  tUInt8 DEF_INV_SEL_ARR_1_8_63_102_177_128_255_255_cycle_B_ETC___d111;
  tUInt8 DEF_cycle_EQ_8___d2;
  tUInt8 DEF_b__h1260;
  tUInt8 DEF_b__h1198;
  tUInt8 DEF_b__h1136;
  tUInt8 DEF_b__h1380;
  tUInt8 DEF_b__h1913;
  tUInt8 DEF_b__h1851;
  tUInt8 DEF_b__h1789;
  tUInt8 DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8;
  tUInt8 DEF_b__h1687;
  tUInt8 DEF_a__h1259;
  tUInt8 DEF_a__h1197;
  tUInt8 DEF_a__h1135;
  tUInt8 DEF_a__h1379;
  tUInt8 DEF_a__h1912;
  tUInt8 DEF_a__h1850;
  tUInt8 DEF_a__h1788;
  tUInt8 DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5;
  tUInt8 DEF_a__h1686;
  tUInt32 DEF_x__h821;
  DEF_x__h821 = INST_cycle.METH_read();
  switch (DEF_x__h821) {
  case 0u:
    DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 = (tUInt8)1u;
    break;
  case 1u:
    DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 = (tUInt8)8u;
    break;
  case 2u:
    DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 = (tUInt8)63u;
    break;
  case 3u:
    DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 = (tUInt8)102u;
    break;
  case 4u:
    DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 = (tUInt8)177u;
    break;
  case 5u:
    DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 = (tUInt8)128u;
    break;
  case 6u:
  case 7u:
    DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 = (tUInt8)255u;
    break;
  default:
    DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 = (tUInt8)170u;
  }
  DEF_a__h1686 = (tUInt8)(DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 >> 7u);
  DEF_a__h1788 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 >> 6u));
  DEF_a__h1850 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 >> 5u));
  DEF_a__h1379 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 >> 3u));
  DEF_a__h1912 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 >> 4u));
  DEF_a__h1135 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 >> 2u));
  DEF_a__h1197 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5 >> 1u));
  DEF_a__h1259 = (tUInt8)((tUInt8)1u & DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5);
  switch (DEF_x__h821) {
  case 0u:
  case 6u:
    DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 = (tUInt8)1u;
    break;
  case 1u:
    DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 = (tUInt8)8u;
    break;
  case 2u:
    DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 = (tUInt8)27u;
    break;
  case 3u:
    DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 = (tUInt8)92u;
    break;
  case 4u:
    DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 = (tUInt8)202u;
    break;
  case 5u:
    DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 = (tUInt8)128u;
    break;
  case 7u:
    DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 = (tUInt8)255u;
    break;
  default:
    DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 = (tUInt8)170u;
  }
  DEF_b__h1687 = (tUInt8)(DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 >> 7u);
  DEF_b__h1789 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 >> 6u));
  DEF_b__h1851 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 >> 5u));
  DEF_b__h1913 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 >> 4u));
  DEF_b__h1380 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 >> 3u));
  DEF_b__h1136 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 >> 2u));
  DEF_b__h1198 = (tUInt8)((tUInt8)1u & (DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8 >> 1u));
  DEF_b__h1260 = (tUInt8)((tUInt8)1u & DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8);
  DEF_cycle_EQ_8___d2 = DEF_x__h821 == 8u;
  DEF_realAns__h3121 = 511u & ((511u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5))) + (511u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8))));
  DEF_NOT_cycle_EQ_8___d3 = !DEF_cycle_EQ_8___d2;
  DEF_a__h3049 = DEF_a__h1912 ^ DEF_b__h1913;
  DEF_b__h3050 = (tUInt8)1u & ~DEF_a__h3049;
  DEF_x__h1504 = DEF_a__h1197 ^ DEF_b__h1198;
  DEF_c__h1199 = DEF_a__h1259 & DEF_b__h1260;
  DEF_x__h1448 = DEF_a__h1135 ^ DEF_b__h1136;
  DEF_x__h1392 = DEF_a__h1379 ^ DEF_b__h1380;
  DEF_x__h2157 = DEF_a__h1850 ^ DEF_b__h1851;
  DEF_c__h1852 = DEF_a__h1912 & DEF_b__h1913;
  DEF_a__h3003 = DEF_x__h2157 ^ DEF_c__h1852;
  DEF_x__h2101 = DEF_a__h1788 ^ DEF_b__h1789;
  DEF_x__h2045 = DEF_a__h1686 ^ DEF_b__h1687;
  DEF_x__h2577 = DEF_c__h1852 | DEF_a__h1912;
  DEF_c__h2504 = DEF_x__h2577 | DEF_b__h1913;
  DEF_b__h3004 = DEF_x__h2157 ^ DEF_c__h2504;
  DEF_y__h2516 = DEF_b__h1851 & DEF_c__h2504;
  DEF_x__h1701 = DEF_a__h1686 & DEF_b__h1687;
  DEF_x__h1803 = DEF_a__h1788 & DEF_b__h1789;
  DEF_y__h1864 = DEF_b__h1851 & DEF_c__h1852;
  DEF_x__h1865 = DEF_a__h1850 & DEF_b__h1851;
  DEF_y__h2518 = DEF_a__h1850 & DEF_c__h2504;
  DEF_x__h2515 = DEF_x__h1865 | DEF_y__h2518;
  DEF_c__h2442 = DEF_x__h2515 | DEF_y__h2516;
  DEF_b__h2958 = DEF_x__h2101 ^ DEF_c__h2442;
  DEF_y__h2454 = DEF_b__h1789 & DEF_c__h2442;
  DEF_y__h2456 = DEF_a__h1788 & DEF_c__h2442;
  DEF_x__h2453 = DEF_x__h1803 | DEF_y__h2456;
  DEF_c__h2340 = DEF_x__h2453 | DEF_y__h2454;
  DEF_b__h2912 = DEF_x__h2045 ^ DEF_c__h2340;
  DEF_y__h2354 = DEF_a__h1686 & DEF_c__h2340;
  DEF_x__h2351 = DEF_x__h1701 | DEF_y__h2354;
  DEF_y__h1866 = DEF_a__h1850 & DEF_c__h1852;
  DEF_x__h1863 = DEF_x__h1865 | DEF_y__h1866;
  DEF_c__h1790 = DEF_x__h1863 | DEF_y__h1864;
  DEF_a__h2957 = DEF_x__h2101 ^ DEF_c__h1790;
  DEF_y__h1802 = DEF_b__h1789 & DEF_c__h1790;
  DEF_y__h1804 = DEF_a__h1788 & DEF_c__h1790;
  DEF_x__h1801 = DEF_x__h1803 | DEF_y__h1804;
  DEF_c__h1688 = DEF_x__h1801 | DEF_y__h1802;
  DEF_a__h2911 = DEF_x__h2045 ^ DEF_c__h1688;
  DEF_y__h1700 = DEF_b__h1687 & DEF_c__h1688;
  DEF_y__h1702 = DEF_a__h1686 & DEF_c__h1688;
  DEF_x__h1699 = DEF_x__h1701 | DEF_y__h1702;
  DEF_a__h327 = DEF_x__h1699 | DEF_y__h1700;
  DEF_x__h426 = DEF_a__h1379 & DEF_b__h1380;
  DEF_x__h1150 = DEF_a__h1135 & DEF_b__h1136;
  DEF_y__h1211 = DEF_b__h1198 & DEF_c__h1199;
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_cycle_EQ_8___d2)
      dollar_display(sim_hdl, this, "s", &__str_literal_1);
  DEF_x__h1212 = DEF_a__h1197 & DEF_b__h1198;
  DEF_y__h1213 = DEF_a__h1197 & DEF_c__h1199;
  DEF_x__h1210 = DEF_x__h1212 | DEF_y__h1213;
  DEF_c__h1137 = DEF_x__h1210 | DEF_y__h1211;
  DEF_y__h1151 = DEF_a__h1135 & DEF_c__h1137;
  DEF_x__h1148 = DEF_x__h1150 | DEF_y__h1151;
  DEF_y__h2352 = DEF_b__h1687 & DEF_c__h2340;
  DEF_b__h328 = DEF_x__h2351 | DEF_y__h2352;
  DEF_y__h1149 = DEF_b__h1136 & DEF_c__h1137;
  DEF_c__h1381 = DEF_x__h1148 | DEF_y__h1149;
  DEF_y__h425 = DEF_b__h1380 & DEF_c__h1381;
  DEF_y__h427 = DEF_a__h1379 & DEF_c__h1381;
  DEF_x__h424 = DEF_x__h426 | DEF_y__h427;
  DEF_sel__h196 = DEF_x__h424 | DEF_y__h425;
  DEF_a__h331 = (tUInt8)1u & ~DEF_sel__h196;
  DEF_a__h3051 = DEF_a__h331 & DEF_a__h3049;
  DEF_b__h3052 = DEF_sel__h196 & DEF_b__h3050;
  DEF_a__h3005 = DEF_a__h331 & DEF_a__h3003;
  DEF_b__h3006 = DEF_sel__h196 & DEF_b__h3004;
  DEF_a__h2959 = DEF_a__h331 & DEF_a__h2957;
  DEF_b__h2960 = DEF_sel__h196 & DEF_b__h2958;
  DEF_a__h2913 = DEF_a__h331 & DEF_a__h2911;
  DEF_b__h2914 = DEF_sel__h196 & DEF_b__h2912;
  DEF_a__h329 = DEF_a__h331 & DEF_a__h327;
  DEF_b__h330 = DEF_sel__h196 & DEF_b__h328;
  DEF_x__h3284 = DEF_x__h821 + 1u;
  DEF_high__h193 = (tUInt8)31u & ((((((DEF_a__h329 | DEF_b__h330) << 4u) | ((DEF_a__h2913 | DEF_b__h2914) << 3u)) | ((DEF_a__h2959 | DEF_b__h2960) << 2u)) | ((DEF_a__h3005 | DEF_b__h3006) << 1u)) | (DEF_a__h3051 | DEF_b__h3052));
  DEF_v__h186 = 511u & (((((((tUInt32)(DEF_high__h193)) << 4u) | (((tUInt32)(DEF_x__h1392 ^ DEF_c__h1381)) << 3u)) | (((tUInt32)(DEF_x__h1448 ^ DEF_c__h1137)) << 2u)) | (((tUInt32)(DEF_x__h1504 ^ DEF_c__h1199)) << 1u)) | (tUInt32)(DEF_a__h1259 ^ DEF_b__h1260));
  DEF_INV_SEL_ARR_1_8_63_102_177_128_255_255_cycle_B_ETC___d111 = DEF_v__h186 == DEF_realAns__h3121;
  DEF_NOT_cycle_EQ_8_AND_NOT_INV_SEL_ARR_1_8_63_102__ETC___d114 = DEF_NOT_cycle_EQ_8___d3 && !DEF_INV_SEL_ARR_1_8_63_102_177_128_255_255_cycle_B_ETC___d111;
  DEF_NOT_cycle_EQ_8_AND_INV_SEL_ARR_1_8_63_102_177__ETC___d112 = DEF_NOT_cycle_EQ_8___d3 && DEF_INV_SEL_ARR_1_8_63_102_177_128_255_255_cycle_B_ETC___d111;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_cycle_EQ_8___d2)
      dollar_finish(sim_hdl, "32", 1u);
    if (DEF_NOT_cycle_EQ_8_AND_INV_SEL_ARR_1_8_63_102_177__ETC___d112)
      dollar_display(sim_hdl,
		     this,
		     "s,8,8,9",
		     &__str_literal_2,
		     DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5,
		     DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8,
		     DEF_v__h186);
    if (DEF_NOT_cycle_EQ_8_AND_NOT_INV_SEL_ARR_1_8_63_102__ETC___d114)
      dollar_display(sim_hdl,
		     this,
		     "s,8,8,9,9",
		     &__str_literal_3,
		     DEF_SEL_ARR_1_8_63_102_177_128_255_255_cycle___d5,
		     DEF_SEL_ARR_1_8_27_92_202_128_1_255_cycle___d8,
		     DEF_v__h186,
		     DEF_realAns__h3121);
    if (DEF_NOT_cycle_EQ_8_AND_NOT_INV_SEL_ARR_1_8_63_102__ETC___d114)
      dollar_finish(sim_hdl, "32", 1u);
  }
  INST_cycle.METH_write(DEF_x__h3284);
}


/* Methods */


/* Reset routines */

void MOD_mkTbCSASimple::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_cycle.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTbCSASimple::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTbCSASimple::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cycle.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTbCSASimple::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 2u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  num = INST_cycle.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTbCSASimple::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbCSASimple &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTbCSASimple::vcd_defs(tVCDDumpType dt, MOD_mkTbCSASimple &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
    }
}

void MOD_mkTbCSASimple::vcd_prims(tVCDDumpType dt, MOD_mkTbCSASimple &backing)
{
  INST_cycle.dump_VCD(dt, backing.INST_cycle);
}
